<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <title>函式的綁定物件 this 基本篇</title>
    </head>
    <body>
        <script>
            // this代表函式的[綁定物件]，通常在函式中使用
            // 不同的程式碼脈絡下，[綁定物件]代表不同的東西

            // 情況一: 獨立的函式
/*
            function test(){
                console.log(this); // this: window 物件
                console.log(this.innerWidth); //印出視窗的寬度
            }
            test();
*/
            // 情況二: 物件的方法
/*
            var obj = {
                'x':3,
                test:function(){
                    console.log(this); 
                        //this: 方法所屬的物件本身 (obj)
                    console.log(this.x)
                }
            };
            obj.test();
*/
            // 情況三: 事件處理函式
/*
            document.addEventListener('click',function(){
                console.log(this);
                    //this: 觸發事件的對象物件 (document)
                this.body.innerHTML='Clicked';
                    //document.body.innerHTML
            });
*/
            // 情況四: 建構函式
/*
            function point(){
                console.log(this);
                    //this: 瀏覽器自動幫我們建立好新的空白物件
                this.x=3;
                this.y=4;
            };
            var p1 = new point();
            console.log(p1);
*/

//進階: 
    //1. 使用bind重新綁定物件
    //函式名稱.bind(新的綁定物件) 回傳新的函式
            function test(){
                console.log(this);
            }
            test(); // 使用預設的綁定物件 (window)
            var test2=test.bind({x:3});
            test2(); //新的綁定物件是{x:3}

    //2. 使用apply呼叫函式
    //函式名稱.apply(綁定物件,[參數資料,...])

    //3. 使用call呼叫函式
    //函式名稱.call(綁定物件,參數資料,...)            
        </script>
    </body>
</html>