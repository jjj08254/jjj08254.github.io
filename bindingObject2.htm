<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <title>函式的綁定物件 this 進階篇</title>
    </head>
    <body>
        <script>
            // this代表函式的[綁定物件]，通常在函式中使用
            // 不同的程式碼脈絡下，[綁定物件]代表不同的東西

            // 基礎: 了解綁定物件在不同基本脈絡下的變化
            // 情況一: 獨立的函式
            // 情況二: 物件的方法
            // 情況三: 事件處理函式
            // 情況四: 建構函式


            //進階: 自訂綁定物件
            //1. 使用bind重新綁定物件
            //函式名稱.bind(新的綁定物件) 回傳新的函式

                function test(){
                    console.log("綁定物件",this);
                }
                test(); // 使用預設的綁定物件 (window)
                var test2=test.bind({x:3});
                test2(); //新的綁定物件是{x:3}
                var test3=test.bind(document);
                test3();

            //2. 使用apply呼叫函式
            //函式名稱.apply(綁定物件,[參數資料,...])

                function add(n1, n2){
                    console.log('結果',n1+n2);
                    console.log('綁定物件',this);
                };
                add(3,4); //基本的函式呼叫，無法自己設定綁定物件
                add.apply({y:4},[4, 5]); //使用apply
                add.apply(document,[5, 6]);
            //3. 使用call呼叫函式
                add.call({z:10}, 10, 9);
            //函式名稱.call(綁定物件,參數資料,...)            
        </script>
    </body>
</html>