{"version":3,"sources":["components/Header.js","components/TodoItem.js","components/Todo.js","components/InputTodoItem.js","components/About.js","base.js","components/App.js","index.js"],"names":["Header","to","Component","TodoItem","getStyle","background","padding","fontSize","borderBottom","textDecoration","props","todo","checked","toggleCheck","todoCopy","updateTodo","index","style","this","type","cursor","onChange","content","position","right","borderRadius","color","onClick","deleteTodoItem","Todo","Object","keys","todos","map","key","InputTodoItem","todoItemRef","React","createRef","handleSubmit","e","preventDefault","newTodoItem","current","value","addToList","currentTarget","reset","autoComplete","onSubmit","ref","About","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","App","state","updatedTodoItem","setState","Date","now","syncState","context","todo0","todo1","removeBinding","className","basename","process","exact","path","render","component","document","querySelector"],"mappings":"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","file":"static/js/main.5582b6fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <h1>TO DO LIST</h1>\r\n        <Link to=\"/\">Home</Link> | <Link to=\"/about\">About</Link>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nexport class TodoItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      background: '#f4f4f4',\r\n      padding: '4px',\r\n      fontSize: '25px',\r\n      borderBottom: '1px solid rgba(63,53,54,1)',\r\n      textDecoration: this.props.todo.checked ? 'line-through' : 'none',\r\n    };\r\n  };\r\n\r\n  toggleCheck = () => {\r\n    const todoCopy = { ...this.props.todo };\r\n    todoCopy.checked = !todoCopy.checked;\r\n    this.props.updateTodo(todoCopy, this.props.index);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p>\r\n          <input\r\n            type=\"checkbox\"\r\n            style={{ cursor: 'pointer' }}\r\n            onChange={this.toggleCheck}\r\n            checked={this.props.todo.checked}\r\n          />{' '}\r\n          {'  '}\r\n          {this.props.todo.content}\r\n          <button\r\n            style={{\r\n              position: 'absolute',\r\n              right: '35px',\r\n              cursor: 'pointer',\r\n              borderRadius: '50%',\r\n              background: 'red',\r\n              color: 'white',\r\n            }}\r\n            onClick={() => this.props.deleteTodoItem(this.props.index)}\r\n          >\r\n            X\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nexport class Todo extends Component {\r\n  render() {\r\n    return Object.keys(this.props.todos).map((key) => (\r\n      <TodoItem\r\n        key={key}\r\n        index={key}\r\n        todo={this.props.todos[key]}\r\n        updateTodo={this.props.updateTodo}\r\n        deleteTodoItem={this.props.deleteTodoItem}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from 'react';\r\n\r\nexport class InputTodoItem extends Component {\r\n  todoItemRef = React.createRef();\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTodoItem = {\r\n      content: this.todoItemRef.current.value,\r\n      checked: false,\r\n    };\r\n    this.props.addToList(newTodoItem);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n        <input ref={this.todoItemRef} type=\"text\" />\r\n        <button type=\"submit\"> Add +</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputTodoItem;\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <>\r\n      <h1>About</h1>\r\n      <p>This todo list is made by JOJO Jack</p>\r\n      <p>For practicing react skill</p>\r\n    </>\r\n  );\r\n}\r\n","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyCfZ-8td5k87OBjOGXyhE4LgeVZE354DU0',\r\n  authDomain: 'todo-list-practice-jojo-jack.firebaseapp.com',\r\n  databaseURL: 'https://todo-list-practice-jojo-jack.firebaseio.com',\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebase };\r\nexport default base;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Todo from './Todo';\r\nimport InputTodoItem from './InputTodoItem';\r\nimport About from './About';\r\nimport base from '../base';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    todos: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.ref = base.syncState('todo-list', {\r\n      context: this,\r\n      state: 'todos',\r\n    });\r\n\r\n    const initialTodos = {\r\n      todo0: { content: 'This is a practice of react', checked: true },\r\n      todo1: { content: 'Made By JOJO Jack', checked: false },\r\n    };\r\n    this.setState({\r\n      todos: initialTodos,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  updateTodo = (updatedTodoItem, key) => {\r\n    const todos = { ...this.state.todos };\r\n    todos[key] = updatedTodoItem;\r\n    this.setState({ todos });\r\n  };\r\n\r\n  addToList = (newTodoItem) => {\r\n    const todos = { ...this.state.todos };\r\n    todos[`todo${Date.now()}`] = newTodoItem;\r\n    this.setState({ todos });\r\n  };\r\n\r\n  deleteTodoItem = (key) => {\r\n    const todos = { ...this.state.todos };\r\n    todos[key] = null;\r\n    this.setState({ todos });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Header />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={(props) => (\r\n              <>\r\n                <InputTodoItem\r\n                  todos={this.state.todos}\r\n                  addToList={this.addToList}\r\n                />\r\n                <Todo\r\n                  todos={this.state.todos}\r\n                  updateTodo={this.updateTodo}\r\n                  deleteTodoItem={this.deleteTodoItem}\r\n                />\r\n              </>\r\n            )}\r\n          />\r\n          <Route path=\"/about\" component={About} />\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\n\nrender(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}