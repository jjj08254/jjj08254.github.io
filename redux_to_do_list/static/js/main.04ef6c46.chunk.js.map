{"version":3,"sources":["formatTime.js","reducers/listReducer.js","actions/actionTypes.js","reducers/listNameReducer.js","reducers/index.js","store.js","components/NotFound.js","components/Header.js","actions/listActions.js","components/InputSection.js","components/DisplayTodoList.js","base.js","actions/listPickerAction.js","App.js","components/TodoListPicker.js","components/About.js","components/Router.js","index.js"],"names":["formatTime","Intl","DateTimeFormat","hour","minute","second","format","Date","now","defaultState","id","title","checked","time","listReducer","state","action","type","nextState","payload","copyState","filter","item","map","itemsThatAlreadyExist","console","log","length","syncItems","listNameReducer","theNameOfTheList","rootReducer","combineReducers","listName","listItems","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","NotFound","Header","style","headerStyle","this","props","color","fontWeight","to","Component","letterSpacing","textDecoration","background","padding","display","width","textAlign","connect","addItemAction","newItemTitle","deleteItemAction","selectedItem","checkItemAction","itemGotChecked","resetItemAction","syncItemAction","existingItems","InputSection","handleSubmit","e","preventDefault","currentTarget","text","value","reset","Form","inline","autoComplete","onSubmit","FormGroup","flex","className","Input","fontSize","flexBasis","name","placeholder","required","Button","dispatch","bindActionCreators","DisplayTodoList","displayListItem","InputGroup","key","marginBottom","overflowWrap","InputGroupAddon","addonType","InputGroupText","addon","onChange","aria-label","ListGroupItem","justifyContent","alignItems","ButtonGroup","position","onClick","size","borderRadius","verticalAlign","backgroundColor","ListGroup","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","pickListAction","pageRefreshAction","listId","App","match","params","itemsFromLocal","JSON","parse","localStorage","getItem","ref","syncState","context","setItem","stringify","removeBinding","React","TodoListPicker","history","push","defaultValue","About","Router","basename","process","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04ef6c46.chunk.js","sourcesContent":["export function formatTime() {\r\n  return new Intl.DateTimeFormat('en-us', {\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n  }).format(Date.now());\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { formatTime } from '../formatTime';\r\n\r\nconst defaultState = [\r\n  {\r\n    id: 0,\r\n    title: 'This is a practice of redux',\r\n    checked: true,\r\n    time: formatTime(),\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Made By JOJO Jack',\r\n    checked: false,\r\n    time: formatTime(),\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"I don't know how to do it\",\r\n    checked: false,\r\n    time: formatTime(),\r\n  },\r\n];\r\n\r\nfunction listReducer(state = defaultState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_ITEM: {\r\n      const nextState = [\r\n        {\r\n          id: Date.now(),\r\n          title: action.payload,\r\n          checked: false,\r\n          time: formatTime(),\r\n        },\r\n        ...state,\r\n      ];\r\n      return nextState;\r\n    }\r\n\r\n    case actionTypes.DELETE_ITEM: {\r\n      const copyState = [...state];\r\n      const nextState = copyState.filter(\r\n        (item) => item.id !== action.payload.id\r\n      );\r\n      return nextState;\r\n    }\r\n\r\n    case actionTypes.CHECK_ITEM: {\r\n      const copyState = [...state];\r\n      const nextState = copyState.map((item) => {\r\n        if (item.id === action.payload.id) {\r\n          item.checked = !item.checked;\r\n          return item;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      return nextState;\r\n    }\r\n\r\n    case actionTypes.SYNC_ITEM: {\r\n      const itemsThatAlreadyExist = action.payload;\r\n      console.log(itemsThatAlreadyExist);\r\n      if (!itemsThatAlreadyExist.length) {\r\n        return [...defaultState];\r\n      }\r\n      const syncItems = [...itemsThatAlreadyExist];\r\n      return syncItems;\r\n    }\r\n\r\n    case actionTypes.RESET_ITEM: {\r\n      return defaultState;\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport default listReducer;\r\n","export const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const CHECK_ITEM = 'CHECK_ITEM';\r\nexport const RESET_ITEM = 'RESET_ITEM';\r\nexport const SYNC_ITEM = 'SYNC_ITEM';\r\n\r\nexport const LIST_PICK = 'LIST_PICK';\r\nexport const PAGE_REFRESH = 'PAGE_REFRESH';\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = null;\r\n\r\nfunction listNameReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LIST_PICK: {\r\n      const theNameOfTheList = action.payload;\r\n      console.log('the name of the store is ', theNameOfTheList);\r\n      return theNameOfTheList;\r\n    }\r\n\r\n    case actionTypes.PAGE_REFRESH: {\r\n      console.log('you refresh the page, now you are in list', action.payload);\r\n      return action.payload;\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\n// export default function listNameReducer(state = initialState, action) {\r\n//   if (action.type === actionTypes.LIST_PICK) {\r\n//     console.log('from reducer');\r\n//     const theNameOfTheList = action.payload;\r\n//     console.log('the name of the store is ', theNameOfTheList);\r\n//     return theNameOfTheList;\r\n//   }\r\n// }\r\n\r\nexport default listNameReducer;\r\n","import { combineReducers } from 'redux';\r\nimport listReducer from './listReducer';\r\nimport listNameReducer from './listNameReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  listName: listNameReducer,\r\n  listItems: listReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not Found!?!!!!!!!!!! JOJO</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header style={headerStyle}>\r\n        <h1>Todo List</h1>\r\n        <h5>{this.props.listName}</h5>\r\n        <Link\r\n          style={{ color: 'darkblue', fontWeight: 'bold' }}\r\n          to={`/jojojack/${this.props.listName}`}\r\n        >\r\n          Home\r\n        </Link>{' '}\r\n        |{' '}\r\n        <Link style={{ color: 'darkblue', fontWeight: 'bold' }} to=\"/about\">\r\n          About\r\n        </Link>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst headerStyle = {\r\n  color: 'white',\r\n  fontWeight: '100',\r\n  letterSpacing: '2px',\r\n  textDecoration: 'none',\r\n  background: 'rgba(0, 0, 0, 0.4)',\r\n  padding: '20px 5px',\r\n  display: 'inline-block',\r\n  width: '100%',\r\n  textAlign: 'center',\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listName: state.listName,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport function addItemAction(newItemTitle) {\r\n  return {\r\n    type: actionTypes.ADD_ITEM,\r\n    payload: newItemTitle,\r\n  };\r\n}\r\n\r\nexport function deleteItemAction(selectedItem) {\r\n  return {\r\n    type: actionTypes.DELETE_ITEM,\r\n    payload: selectedItem,\r\n  };\r\n}\r\n\r\nexport function checkItemAction(itemGotChecked) {\r\n  return {\r\n    type: actionTypes.CHECK_ITEM,\r\n    payload: itemGotChecked,\r\n  };\r\n}\r\n\r\nexport function resetItemAction() {\r\n  return {\r\n    type: actionTypes.RESET_ITEM,\r\n  };\r\n}\r\n\r\nexport function syncItemAction(existingItems) {\r\n  return {\r\n    type: actionTypes.SYNC_ITEM,\r\n    payload: existingItems,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { Form, FormGroup, Button, Input } from 'reactstrap';\r\nimport { addItemAction } from '../actions/listActions';\r\n\r\nclass InputSection extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addItemAction(e.currentTarget.text.value);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form\r\n        style={{ display: 'flex' }}\r\n        inline\r\n        autoComplete=\"off\"\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <FormGroup\r\n          style={{ flex: '10', display: 'flex' }}\r\n          className=\"mb-2 mr-sm-2 mb-sm-0\"\r\n        >\r\n          <Input\r\n            style={{ fontSize: '20px', flexBasis: '100%' }}\r\n            type=\"text\"\r\n            name=\"text\"\r\n            id=\"examplePassword\"\r\n            placeholder=\"Input Add Item\"\r\n            required\r\n          />\r\n        </FormGroup>\r\n        <Button style={{ flex: '1' }} type=\"submit\" name=\"addItemBtn\">\r\n          Add +\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listItems: state.listItems,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ addItemAction }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputSection);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  ButtonGroup,\r\n} from 'reactstrap';\r\n\r\nimport { checkItemAction, deleteItemAction } from '../actions/listActions';\r\n\r\nclass DisplayTodoList extends Component {\r\n  displayListItem = () => {\r\n    return this.props.listItems.map((item) => (\r\n      <InputGroup\r\n        key={item.id}\r\n        style={{\r\n          marginBottom: '10px',\r\n          overflowWrap: 'anywhere',\r\n          display: 'flex',\r\n        }}\r\n      >\r\n        <InputGroupAddon style={{ flex: '1' }} addonType=\"prepend\">\r\n          <InputGroupText>\r\n            <Input\r\n              addon\r\n              checked={item.checked}\r\n              onChange={() => this.props.checkItemAction(item)}\r\n              type=\"checkbox\"\r\n              aria-label=\"Checkbox for following text input\"\r\n            />\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n\r\n        <ListGroupItem\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            flex: '50',\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                fontSize: '35px',\r\n                textDecoration: item.checked ? 'line-through' : 'none',\r\n              }}\r\n            >\r\n              {item.title}\r\n            </span>{' '}\r\n            <span style={{}}>&nbsp;&nbsp;- {item.time}</span>\r\n          </span>\r\n          <ButtonGroup\r\n            style={{\r\n              position: 'relative',\r\n            }}\r\n            onClick={() => this.props.deleteItemAction(item)}\r\n            size=\"sm\"\r\n          >\r\n            <Button\r\n              style={{\r\n                borderRadius: '40%',\r\n                verticalAlign: 'text-top',\r\n                fontSize: '25px',\r\n                backgroundColor: '#f4f4f4',\r\n                color: 'red',\r\n                fontWeight: 'bold',\r\n              }}\r\n            >\r\n              {' '}\r\n              &times;\r\n            </Button>\r\n          </ButtonGroup>\r\n        </ListGroupItem>\r\n      </InputGroup>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return <ListGroup>{this.displayListItem()}</ListGroup>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listItems: state.listItems,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ checkItemAction, deleteItemAction }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayTodoList);\r\n","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyAOg1ExxYY2smbb-K4fd93h6prYiNBR5pc',\r\n  authDomain: 'redux-todo-list-jojo-jack.firebaseapp.com',\r\n  databaseURL: 'https://redux-todo-list-jojo-jack.firebaseio.com',\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebase };\r\nexport default base;\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport function pickListAction(listName) {\r\n  return {\r\n    type: actionTypes.LIST_PICK,\r\n    payload: listName,\r\n  };\r\n}\r\n\r\nexport function pageRefreshAction(listId) {\r\n  return {\r\n    type: actionTypes.PAGE_REFRESH,\r\n    payload: listId,\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Header from './components/Header';\r\nimport InputSection from './components/InputSection';\r\nimport DisplayTodoList from './components/DisplayTodoList';\r\nimport base from './base';\r\nimport { resetItemAction, syncItemAction } from './actions/listActions';\r\nimport { pageRefreshAction } from './actions/listPickerAction';\r\n\r\nclass App extends React.Component {\r\n  // state = {\r\n  //   listItems: {},\r\n  // };\r\n\r\n  componentDidMount() {\r\n    const action = this.props.pageRefreshAction(this.props.match.params.listId);\r\n    const itemsFromLocal = JSON.parse(localStorage.getItem(action.payload));\r\n    if (itemsFromLocal) {\r\n      this.props.syncItemAction(itemsFromLocal);\r\n    } else {\r\n      this.props.syncItemAction([]);\r\n    }\r\n\r\n    this.ref = base.syncState(`${this.props.listName}/list`, {\r\n      context: this,\r\n      state: 'listItems',\r\n    });\r\n    // this.props.syncItemAction(this.state.listItems);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // this.setState({ listItems: this.props.listItems });\r\n    localStorage.setItem(\r\n      `${this.props.listName}`,\r\n      JSON.stringify(this.props.listItems)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n    this.props.resetItemAction();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n        <br />\r\n        <InputSection />\r\n        <br />\r\n        <DisplayTodoList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listItems: state.listItems,\r\n    listName: state.listName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    { pageRefreshAction, resetItemAction, syncItemAction },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { pickListAction } from '../actions/listPickerAction';\r\n\r\nexport class TodoListPicker extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const listName = e.currentTarget.listName.value;\r\n    this.props.pickListAction(e.currentTarget.listName.value);\r\n    this.props.history.push(`./jojojack/${listName}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form inline onSubmit={this.handleSubmit}>\r\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n          <Input\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            name=\"listName\"\r\n            placeholder=\"Enter a List Name\"\r\n            defaultValue=\"JOJO-Jack\"\r\n          />\r\n        </FormGroup>\r\n        <Button>Submit</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    listName: state.listName,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ pickListAction }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListPicker);\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\n\r\nexport class About extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n        Made By JOJO\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport NotFound from './NotFound';\r\nimport App from '../App';\r\nimport TodoListPicker from './TodoListPicker';\r\nimport About from './About';\r\n\r\nconst Router = () => (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={TodoListPicker} />\r\n      <Route path=\"/jojojack/:listId\" component={App} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './store';\r\nimport Router from './components/Router';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}